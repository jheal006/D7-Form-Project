<?php

/**
* Implements hook _permission().
*/
function family_history_form_permission() {
  return array(
    'submit family_history_form' => array(
      'title' => 'Submit family_history_form',
      'description' => 'Submit the family_history_form',
    ),
  );
}

/**
* Implements hook _menu().
*/
function family_history_menu() {
  $items = array();
  $items['family_history/form'] = array(
    'title' => 'Family Form',
    'description' => 'Family History Form for Drupal 7',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'access arguments' => array('submit family_history_form'),
    'page arguments' => array('family_history_form'),
  );
  $items['family_history/form/%/edit'] = array(
    'title' => 'Edit Family Form',
    'description' => 'Edit Family History Form',
    'type' => MENU_LOCAL_TASK,
    // 'page callback' => 'drupal_get_form',
    // 'page arguments' => array(2),
    'access arguments' => array(
      'access administration pages',
    ),
  );
  $items['family_history/entries/%/delete'] = array(
    'title' => 'Delete Family Form',
    'description' => 'Delete Family History Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('delete_survey_record_confirm'),
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['family_history/entries'] = array(
    'title' => 'Form Entries',
    'description' => 'List of Form Entries',
    'page callback' => 'entryList',
    'access arguments' => array('family_history_form'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function entryList() {
  $query = db_query("SELECT id FROM family_history");
  $results = $query->fetchAll();
  // Create the row element.
  $rows = array();
  foreach($results as $result) {
    // Actions

    $rows[] = array(
      'data' => [
        '#form' => 'FORM # ' . $result->id,
        '#edit' => l('Edit', 'family_history/form/'. $result->id .'/edit'),
        '#delete' => l('Delete', 'family_history/entries/'. $result->id .'/delete'),
      ],
    );
  }

  // Create the header.
  $header = array('List of Forms', 'Edit', 'Delete');

   $output = array(
     '#theme' => 'table',    // Here you can write #type also instead of #theme.
     '#header' => $header,
     '#rows' => $rows,
   );

   return $output;
}

/**
 * Delete Survey Record Confirmation
 */
function delete_survey_record_confirm($form, &$form_state){
  $url_comp = explode('/', request_uri());
    $id = $url_comp[3];

  //die($id);
  $form['delete'] = array(
    '#type' => 'value',
    '#value' => $id,
  );
  return confirm_form(
    $form,
    t('Are you sure you want to delete form %id?', array('%id' => $id)),
    'family_history/entries/',
    t('This action cannot be undone.'),
    t('Delete'),
    t('Cancel')
  );


}
/**
 * Delete Survey Record Function
 */
function delete_survey_record_confirm_submit($form, &$form_state) {
  $url_comp = explode('/', request_uri());
  $id = $url_comp[3];
  var_dump("WTF IS THE ID?", $id);
  if (isset($id)) {
    db_delete('family_history')
      ->condition('id', $id)
      ->execute();
    drupal_set_message('The record has been deleted!');
  } else {
    var_dump('WTF?');
  }
  drupal_goto('/family_history/entries');
}


# our drupal form "form builder" function
function family_history_form($form, &$form_state) {
  $record = [];
  $url_comp = explode('/', request_uri());
  if (array_key_exists(3, $url_comp)) {
    $id = $url_comp[3];
  };


  if (isset($id)) {
    $results =  db_query("SELECT * FROM {family_history} WHERE id = :id", array(
        ':id' => $id,
      ))
      ->fetchObject();
      $record = json_decode(json_encode($results), True);
  }
  //
  // Family History
  // .
  $form['family_history'] = [
    '#type' => 'fieldset',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  ];
  //
  // Family Compisition
  // .
  $form['family_history']['family_comp'] = [
    '#type' => 'fieldset',
    '#title' => 'Family Composition',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  ];
  // Family Comp Parents.
  $form['family_history']['family_comp']['parents'] = [
    '#type' => 'fieldset',
    '#title' => 'Parents',
  ];
  $form['family_history']['family_comp']['parents']['parent_1'] = [
    '#type' => 'select',
    '#options' => [
      'Father' => 'Father',
      'Mother' => 'Mother',
      ],
        '#default_value' => (array_key_exists('parent_1', $record)) ? $record['parent_1']: 'Father',
  ];
  $form['family_history']['family_comp']['parents']['parent_2'] = [
    '#type' => 'select',
    '#options' => [
      'Father' => 'Father',
      'Mother' => 'Mother',
    ],
      '#default_value' => (array_key_exists('parent_2', $record)) ? $record['parent_2']: 'Mother',
  ];
  // Family Comp - Parent(s) Name.
  $form['family_history']['family_comp']['parents']['name'] = [
    '#type' => 'fieldset',
    '#title' => 'Name',
  ];
  $form['family_history']['family_comp']['parents']['name']['parent_1_name'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_1_name', $record)) ? $record['parent_1_name'] : '',
  ];
  $form['family_history']['family_comp']['parents']['name']['parent_2_name'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_2_name', $record)) ? $record['parent_2_name'] : '',
  ];
  // Family Comp - Parent(s) Occupation.
  $form['family_history']['family_comp']['parents']['occupation'] = [
    '#type' => 'fieldset',
    '#title' => 'Occupation',
  ];
  $form['family_history']['family_comp']['parents']['occupation']['parent_1_occupation'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_1', $record)) ? $record['parent_1_occupation']: '',
  ];
  $form['family_history']['family_comp']['parents']['occupation']['parent_2_occupation'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_2', $record)) ? $record['parent_2_occupation']: '',
  ];
  // Family Comp - Parent(s) Education.
  $form['family_history']['family_comp']['parents']['education'] = [
    '#type' => 'fieldset',
    '#title' => 'Education',
  ];
  $form['family_history']['family_comp']['parents']['education']['parent_1_education'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_1_education', $record)) ? $record['parent_1_education']: '',
  ];
  $form['family_history']['family_comp']['parents']['education']['parent_2_education'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_2_education', $record)) ? $record['parent_2_education']: '',
  ];
  // Family Comp - Parent(s) General Health.
  $form['family_history']['family_comp']['parents']['health'] = [
    '#type' => 'fieldset',
    '#title' => 'General Health',
  ];
  $form['family_history']['family_comp']['parents']['health']['parent_1_health'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_1_health', $record)) ? $record['parent_1_health']: '',
  ];
  $form['family_history']['family_comp']['parents']['health']['parent_2_health'] = [
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => (array_key_exists('parent_2_health', $record)) ? $record['parent_2_health']: '',
  ];
  // Family Comp - Sibling(s)
  $form['family_history']['family_comp']['siblings'] = [
    '#type' => 'fieldset',
    '#title' => t('Siblings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  ];
  $form['family_history']['family_comp']['siblings']['siblings_none'] = [
    '#type' => 'checkbox',
    '#title' => 'None',
    '#default_value' => (array_key_exists('siblings_none', $record)) ? $record['siblings_none']: 0,
  ];
  // Family Comp - Sibling(s) Names & Ages.
  $form['family_history']['family_comp']['siblings']['names_ages'] = [
    '#type' => 'fieldset',
    '#title' => t('Names & Ages'),
    '#attributes' => array('class' =>[
      'class' => 'siblings'
    ]),
  ];
  $form['family_history']['family_comp']['siblings']['names_ages']['brothers']['brothers_number'] = [
    '#type' => 'textfield',
    '#title' => t('# of brothers: '),
    '#default_value' => (array_key_exists('brothers_number', $record)) ? $record['brothers_number']: 0,
  ];
  $form['family_history']['family_comp']['siblings']['names_ages']['brothers']['brothers_list'] = [
    '#type' => 'textfield',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#default_value' => (array_key_exists('brother_list', $record)) ? $record['brother_list']: '',
  ];
  $form['family_history']['family_comp']['siblings']['names_ages']['sisters']['sisters_number'] = [
    '#type' => 'textfield',
    '#title' => t('# of sisters: '),
    '#default_value' => (array_key_exists('sisters_number', $record)) ? $record['sisters_number']: 0,
  ];
  $form['family_history']['family_comp']['siblings']['names_ages']['sisters']['sisters_list'] = [
    '#type' => 'textfield',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#default_value' => (array_key_exists('sisters_list', $record)) ? $record['sisters_list']: '',
  ];
  // Family Comp - Children.
  $form['family_history']['family_comp']['children'] = [
    '#type' => 'fieldset',
    '#title' => t('Children'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  ];
  $form['family_history']['family_comp']['children']['children_none'] = [
    '#type' => 'checkbox',
    '#title' => t('None'),
    '#default_value' => (array_key_exists('children_none', $record)) ? $record['children_none']: 0,
  ];
  // Family Comp - Children Names & Ages.
  $form['family_history']['family_comp']['children']['names_ages'] = [
    '#type' => 'fieldset',
    '#title' => t('Names & Ages'),
    '#attributes' =>  array('class' =>[
      'class' => 'children'
    ]),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  ];
  $form['family_history']['family_comp']['children']['names_ages']['sons']['sons_number'] = [
    '#type' => 'textfield',
    '#title' => t('# of sons: '),
    '#default_value' => (array_key_exists('sons_number', $record)) ? $record['sons_number']:0,
  ];
  $form['family_history']['family_comp']['children']['names_ages']['sons']['sons_list'] = [
    '#type' => 'textfield',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#default_value' => (array_key_exists('sons_list', $record)) ? $record['sons_list']:'',
  ];
  $form['family_history']['family_comp']['children']['names_ages']['daughters']['daughters_number'] = [
    '#type' => 'textfield',
    '#title' => t('# of daughters: '),
    '#default_value' => (array_key_exists('daughters_number', $record)) ? $record['daughters_number']:0,
  ];
  $form['family_history']['family_comp']['children']['names_ages']['daughters']['daughters_list'] = [
    '#type' => 'textfield',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#default_value' => (array_key_exists('daughters_list', $record)) ? $record['daughters_list']:'',
  ];
  //
  // Parent's Marital Status
  //
  $form['family_history']['maritalStatus'] = [
    '#type' => 'fieldset',
    '#title' => t("Parent's Marital Status"),
    '#attributes' =>  array('class' => [
      'class' => 'maritalStatus',
    ]),
  ];
  $form['family_history']['maritalStatus']['single'] = [
    '#type' => 'checkbox',
    '#title' => t('Single, never married'),
    '#default_value' => (array_key_exists('single', $record)) ? $record['single']:'',
  ];
  $form['family_history']['maritalStatus']['engaged'] = [
    '#type' => 'checkbox',
    '#title' => t('Engaged'),
    '#default_value' => (array_key_exists('engaged', $record)) ? $record['engaged']:'',
  ];
  $form['family_history']['maritalStatus']['married'] = [
    '#type' => 'checkbox',
    '#title' => t('Married'),
    '#default_value' => (array_key_exists('married', $record)) ? $record['married']:'',
  ];
  $form['family_history']['maritalStatus']['divorced'] = [
    '#type' => 'checkbox',
    '#title' => t('Divorced'),
    '#default_value' => (array_key_exists('divorced', $record)) ? $record['divorced']:'',
  ];
  $form['family_history']['maritalStatus']['seperated'] = [
    '#type' => 'checkbox',
    '#title' => t('Seperated'),
    '#default_value' => (array_key_exists('seperated', $record)) ? $record['seperated']:'',
  ];
  $form['family_history']['maritalStatus']['divorce_process'] = [
    '#type' => 'checkbox',
    '#title' => t('Divorce in process'),
    '#default_value' => (array_key_exists('divorce_process', $record)) ? $record['divorce_process']:'',
  ];
  $form['family_history']['maritalStatus']['livein'] = [
    '#type' => 'checkbox',
    '#title' => t('Live-in'),
    '#default_value' => (array_key_exists('livein', $record)) ? $record['livein']:'',
  ];
  $form['family_history']['maritalStatus']['selfmarriages'] = [
    '#type' => 'checkbox',
    '#title' => t('prior marriages (self)'),
    '#default_value' => (array_key_exists('selfmarriages', $record)) ? $record['selfmarriages']:'',
  ];
  $form['family_history']['maritalStatus']['partnermarriages'] = [
    '#type' => 'checkbox',
    '#title' => t('prior marriages (partner)'),
    '#default_value' => (array_key_exists('partnermarriages', $record)) ? $record['partnermarriages']:'',
  ];
  //
  // General Questions Text Area
  //
  $form['family_history']['textarea'] = [
    '#type' => 'fieldset',
    '#default_value' => (array_key_exists('textarea', $record)) ? $record['textarea']:'',
  ];
  $form['family_history']['textarea']['general_textarea'] = [
    '#type' => 'textarea',
    '#value' => '',
    '#default_value' => (array_key_exists('general_textarea', $record)) ? $record['general_textarea']:'',
  ];
  $form['family_history']['family_relations']['family_relationships_textarea'] = [
    '#type' => 'textarea',
    '#title' => t('Past or present relationship with family members:'),
    '#value' => '',
    '#default_value' => (array_key_exists('family_relationships_textarea', $record)) ? $record['family_relationships_textarea']:'',
  ];
  $form['family_history']['stressors']['checkboxes'] = [
    '#type' => 'checkboxes',
    '#title' => t('Stressors:'),
    '#options' => [
      'none' => t('None reported'),
      'abuse' => t('Abuse'),
      'illness' => t('Illness'),
      'death' => t('Death'),
      'move' => t('Move'),
      'divorce' => t('Separation or divorce'),
      'military' => t('Military Deployment'),
      'other' => t('Other'),
    ],
  ];
  $form['family_history']['stressors']['stressors_textarea'] = [
    '#type' => 'textarea',
    '#value' => '',
    '#default_value' => (array_key_exists('stressors_textarea', $record)) ? $record['stressors_textarea']:'',
  ];
  $form['family_history']['mental_substance']['mental_textarea'] = [
    '#type' => 'textarea',
    '#title' => t('Family history of Mental Health Issues/Substance Abuse/Other::'),
    '#value' => '',
    '#default_value' => (array_key_exists('mental_textarea', $record)) ? $record['mental_textarea']:'',
  ];
  # an html submit button for our drupal form
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}


/**
 * {@inheritdoc}
 */

 function family_history_form_submit($form, $form_state) {

  $retrieve = $form_state['values'];

  $fields = array(
      'parent_1' => $retrieve['parent_1'],
      'parent_2' => $retrieve['parent_2'],
      'parent_1_name' => $retrieve['parent_1_name'],
      'parent_2_name' => $retrieve['parent_2_name'],
      'parent_1_occupation' => $retrieve['parent_1_occupation'],
      'parent_2_occupation' => $retrieve['parent_2_occupation'],
      'parent_1_education' => $retrieve['parent_1_education'],
      'parent_2_education' => $retrieve['parent_2_education'],
      'parent_1_health' => $retrieve['parent_1_health'],
      'parent_2_health' => $retrieve['parent_2_health'],
      'siblings' => $retrieve['siblings_none'],
      'number_of_brothers' => $retrieve['brothers_number'],
      'brothers_list' => $retrieve['brothers_list'],
      'number_of_sisters' => $retrieve['sisters_number'],
      'sisters_list' => $retrieve['sisters_list'],
      'children' => $retrieve['children_none'],
      'number_of_sons' => $retrieve['sons_number'],
      'sons_list' => $retrieve['sons_list'],
      'number_of_daughters' => $retrieve['daughters_number'],
      'daughters_list' => $retrieve['daughters_list'],
      'single' => $retrieve['single'],
      'engaged' => $retrieve['engaged'],
      'married' => $retrieve['married'],
      'divorced' => $retrieve['divorced'],
      'seperated' => $retrieve['seperated'],
      'divorceprocess' => $retrieve['divorce_process'],
      'livein' => $retrieve['livein'],
      'selfmarriages' => $retrieve['selfmarriages'],
      'partnermarriages' => $retrieve['partnermarriages'],
      'general_textarea' => $retrieve['general_textarea'],
      'mental_textarea' =>  $retrieve['mental_textarea'],
      'family_stressors_none' => $retrieve['checkboxes']['none'] ? 1 : 0,
      'family_stressors_abuse' => $retrieve['checkboxes']['abuse'] ? 1 : 0,
      'family_stressors_illness' => $retrieve['checkboxes']['illness'] ? 1 : 0,
      'family_stressors_death' => $retrieve['checkboxes']['death'] ? 1 : 0,
      'family_stressors_move' => $retrieve['checkboxes']['move'] ? 1 : 0,
      'family_stressors_divorce' => $retrieve['checkboxes']['divorce'] ? 1 : 0,
      'family_stressors_military' => $retrieve['checkboxes']['military'] ? 1 : 0,
      'family_stressors_other' => $retrieve['checkboxes']['other'] ? 1 : 0,
      'family_relationships_textarea' => $retrieve['family_relationships_textarea'],
      'stressors_textarea' => $retrieve['stressors_textarea'],
    );

  $url_comp = explode('/', request_uri());
  if (array_key_exists(3, $url_comp)) {
    $id = $url_comp[3];
  };

  if (isset($id)) {
    db_update('family_history')
        ->fields($fields)
        ->condition('id', $id)
        ->execute();
        drupal_set_message("Succesfully Updated");
        drupal_goto('/family_history/entries');
  } else {
    db_insert('family_history')
        ->fields($fields)
        ->execute();
        drupal_set_message("Succesfully Saved");
        drupal_goto('/family_history/entries');
  };
}
